name: <3> Pre-deployment Version Bump

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (production/beta)'
        required: true
        type: choice
        options:
          - production
          - beta
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install bump2version
        run: pip install bump2version

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current branch
        id: branch
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Version bump
        id: bump
        run: |
          if [ "${{ github.event.inputs.release_type }}" = "production" ] && [ "${{ steps.branch.outputs.branch }}" != "main" ]; then
            echo "Production releases are only allowed from main branch"
            exit 1
          fi

          bump2version ${{ github.event.inputs.bump_type }}
          VERSION=$(grep "^version =" pyproject.toml | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build package
        run: |
          pip install build
          python -m build

      - name: Store artifact
        run: |
          if [ "${{ github.event.inputs.release_type }}" = "production" ]; then
            mkdir -p distribution/release
            cp dist/* distribution/release/
          else
            mkdir -p distribution/beta
            cp dist/* distribution/beta/
          fi

      - name: Commit and push changes
        run: |
          git add pyproject.toml .bumpversion.cfg
          git commit -m "Bump version to ${{ steps.bump.outputs.version }}"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: distribution/${{ github.event.inputs.release_type }}
